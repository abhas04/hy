https://github.com/Deepak-B-G/CDSS

******************************
7. }
C program to implement Pass1 of Assembler Code:

#include<stdio.h> 
#include<string.h> 
#include<stdlib.h> 
void main() 
{ 
 char opcode[10], operand[10], label[10], code[10], mnemonic[3];  int locctr, start, length; 
 FILE *fp1,*fp2,*fp3,*fp4; 
 fp1=fopen("Input.txt","r"); 
 fp2=fopen("Optab.txt","r"); 
 fp3=fopen("Symtabl.txt","w"); 
 fp4=fopen("Out.txt","w"); 
 fscanf(fp1,"%s\t%s\t%s", label,opcode,operand); 
 if(strcmp(opcode,"START")==0) 
 { 
 start=atoi(operand); 
 locctr=start; 
 fprintf(fp4,"\t%s\t%s\t%s\n",label,opcode,operand);  fscanf(fp1,"%s\t%s\t%s",label,opcode,operand);  } 
 else 
 locctr=0; 
 while(strcmp(opcode,"END")!=0) 
 { 
 fprintf(fp4,"%d\t",locctr);
 if(strcmp(label,"**")!=0) 
 fprintf(fp3,"%s\t%d\n",label,locctr); 
 fscanf(fp2,"%s\t%s",code,mnemonic); 
 while(strcmp(code,"END")!=0) 
 { 
 if(strcmp(opcode,code)==0) 
 { 
 locctr+=3; 
 break; 
 } 
 fscanf(fp2,"%s\t%s",code,mnemonic);  } 
 if(strcmp(opcode,"WORD")==0) 
 locctr+=3; 
 else if(strcmp(opcode,"RESW")==0) 
 locctr+=(3*(atoi(operand))); 
 else if(strcmp(opcode,"RESB")==0) 
 locctr+=atoi(operand); 
 else if(strcmp(opcode,"BYTE")==0) 
 ++locctr; 
 fprintf(fp4,"%s\t%s\t%s\t\n",label,opcode,operand);  fscanf(fp1,"%s\t%s\t%s",label,opcode,operand);  } 
 fprintf(fp4,"%d\t%s\t%s\t%s\n",locctr,label,opcode,operand);  length=locctr-start; 
 printf("The length of the code:%d\n",length); 
 fclose(fp1); 
 fclose(fp2);
 fclose(fp3); 
 fclose(fp4); 
 } 

**input file = Input.txt **

**	START	2000
**	LDA	FIVE
**	STA	ALPHA
**	LDCH	CHARZ
**	STCH	C1
ALPHA	RESW	2
FIVE	WORD	5
CHARZ	BYTE	C'Z'
C1	RESB	1
**	END	**

**input file = Optab.txt **

START	*
LDA	03
STA	0f
LDCH	53
STCH	57
END	*

**** OUTPUT****
gedit p7.c
gcc p7.c
./a.out

the length of the code : 23

 <-<--output files-->->

**output file = Out.txt **

	**	START	2000
2000	**	LDA	FIVE	
2003	**	STA	ALPHA	
2006	**	LDCH	CHARZ	
2009	**	STCH	C1	
2012	ALPHA	RESW	2	
2018	FIVE	WORD	5	
2021	CHARZ	BYTE	C'Z'	
2022	C1	RESB	1	
2023	**	END	**

**output file = Symtab.txt **

ALPHA	2012
FIVE	2018
CHARZ	2021
C1	2022

**************************************************
8 }
C program to implement Absolute loader. 
Code: 

#include<stdio.h>
#include<string.h>
#include<stdlib.h>
void main()
{
FILE *fp;
int i,addrl,l,j,staddrl;
char name[10],line[50],namel[10],addr[10],rec[10],ch,staddr[10];
printf("enter program name:");
scanf("%s",name);
fp=fopen("abssrc.txt","r");
fscanf(fp,"%s",line);
for(i=2,j=0;i<8,j<6;i++,j++)
namel[j]=line[i];
namel[i]='\0';
printf("name from obj.%s\n",namel);
if(strcmp(name,namel)==0)
{
do{
fscanf(fp,"%s",line);
if(line[0]=='T'){
for(i=2,j=0;i<8,j<6;i++,j++)
staddr[j]=line[i];
staddr[j]='\0';
staddrl=atoi(staddr);
i=12;
while(line[i]!='$')
{
if(line[i]!='^')
{
printf("00%d\t%c%c\n",staddrl,line[i],line[i+1]);
staddrl++;
i=i+2;
}
else
i++;
}
}
else if(line[0]='E')
fclose(fp);
}
while(!feof(fp));
}
}


*input file = abssrc.txt**

H^SAMPLE^001000^0035
T^001000^0C^001003^071009$
T^002000^03^111111$
E^001000


**OUTPUT**
gedit p8.c
gcc p8.c
./a.out

******************************************************
